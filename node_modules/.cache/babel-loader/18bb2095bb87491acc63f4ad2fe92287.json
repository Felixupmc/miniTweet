{"ast":null,"code":"var _jsxFileName = \"/home/fnifni/Documents/minitweet/src/TweetBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport \"./TweetBox.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction TweetBox() {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n\n  const clique = async e => {\n    e.preventDefault();\n    await setLogin({\n      user\n    });\n    const tmp = await poster();\n    faitLe();\n  };\n\n  const faitLe = alors => {\n    console.log(alors);\n    let path = \"/Login\";\n    navigate(path);\n    let path1 = \"/\";\n    navigate(path1);\n  };\n\n  const poster = async () => {\n    return new Promise((resolve, reject) => {\n      axios.put(\"http://localhost:4000/messages/poster\", {\n        login: login,\n        texte: texte,\n        imgUrl: imgUrl\n      });\n      resolve();\n    });\n  };\n\n  const u = axios.get(\"http://localhost:4000/user\", {\n    login: user\n  });\n  const [login, setLogin] = useState('pasconnecté');\n  const [texte, setTexte] = useState('');\n  const [imgUrl, setimgUrl] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"tweetBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://static.actu.fr/uploads/2021/10/portrait-jean-lassalle-gl-actu-toulouse-2.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Que voulez-vous partager ?\",\n          type: \"text\",\n          value: texte,\n          onChange: e => {\n            setTexte(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgPLUSbtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"url d'une image\",\n          type: \"email\",\n          value: imgUrl,\n          onChange: e => {\n            setimgUrl(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tweetButton1\",\n          onClick: clique,\n          children: \"Poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetBox, \"cVUUSZSw8Fl2+VzcdNKCL1h2Ebs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TweetBox;\nexport default TweetBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"sources":["/home/fnifni/Documents/minitweet/src/TweetBox.js"],"names":["React","useContext","useState","Avatar","useNavigate","UserContext","axios","require","TweetBox","navigate","user","setUser","clique","e","preventDefault","setLogin","tmp","poster","faitLe","alors","console","log","path","path1","Promise","resolve","reject","put","login","texte","imgUrl","u","get","setTexte","setimgUrl","target","value"],"mappings":"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","sourcesContent":["import React,{ useContext, useState } from \"react\";\nimport \"./TweetBox.css\";\nimport {Avatar} from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\n\nconst axios = require('axios')\n\nfunction TweetBox() {\n\n    let navigate = useNavigate(); \n    const {user,setUser} = useContext(UserContext)\n\n    const clique = async (e) => {\n        e.preventDefault();\n        await setLogin({user})\n        const tmp = await poster()\n        faitLe()\n    }\n    \n    const faitLe = (alors) => {\n        console.log(alors)\n        let path = \"/Login\"; \n        navigate(path)\n        let path1 = \"/\"\n        navigate(path1)\n    }\n                \n    \n    const poster = async () =>{ \n        return new Promise((resolve, reject) => {\n            axios.put(\"http://localhost:4000/messages/poster\",{ \n                login : login,\n                texte : texte,\n                imgUrl : imgUrl,\n            })\n            resolve()\n        });\n        \n    }\n\n    const u = axios.get(\"http://localhost:4000/user\", {login : user} )\n\n    const [login,setLogin] = useState('pasconnecté');\n    const [texte,setTexte] = useState('');\n    const [imgUrl,setimgUrl] = useState('');\n\n    return (\n        <div>\n            <form className=\"tweetBox\">\n                <div className=\"tweetBox__input\">\n                    <Avatar src=\"https://static.actu.fr/uploads/2021/10/portrait-jean-lassalle-gl-actu-toulouse-2.jpg\" />\n                    <input placeholder=\"Que voulez-vous partager ?\"  type=\"text\" value={texte} onChange={(e) => {setTexte(e.target.value)}}/>\n                </div>\n                <div className=\"imgPLUSbtn\">\n                    <input placeholder=\"url d'une image\"  type=\"email\" value={imgUrl} onChange={(e) => {setimgUrl(e.target.value)}}/>\n                    <button className=\"tweetButton1\" onClick={clique} >Poster</button>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\n\nexport default TweetBox"]},"metadata":{},"sourceType":"module"}